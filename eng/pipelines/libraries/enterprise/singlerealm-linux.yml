pool:
  vmImage: 'ubuntu-18.04'

variables:
  - template: ../variables.yml
  - name: sdkBaseImage
    value: linux-dotnetruntime-sdk-current
  - name: enterpriseTestsSetup
    value: $(sourcesRoot)/Common/tests/Scripts/EnterpriseTestsSetup/SingleRealm
  - name: systemNetSecurityTests
    value: $(sourcesRoot)/System.Net.Security/tests/EnterpriseTests/SingleRealm

steps:
- bash: |
    docker build -t $(sdkBaseImage) --build-arg CONFIGURATION=$(BUILD_CONFIGURATION) --build-arg BUILD_SCRIPT_NAME=$(buildScriptFileName) -f $(enterpriseTestsSetup)/libraries.Dockerfile .
  displayName: Build Libraries

- bash: |
    cd $(enterpriseTestsSetup)
    docker-compose build
  displayName: Build test machine images
  env:
    SDK_BASE_IMAGE: $(sdkBaseImage)

- bash: |
    cd $(enterpriseTestsSetup)
    docker-compose up -d
  displayName: Start test network and machines

- bash: |
    docker cp $(systemNetSecurityTests) linuxclient:/System.Net.Security
    docker exec linuxclient dotnet test /System.Net.Security/System.Net.Security.EnterpriseTests.csproj --logger:trx --results-directory /testresults
    docker cp linuxclient:/testresults .
  displayName: Run System.Net.Security.EnterpriseTests

- bash: |
    cd $(enterpriseTestsSetup)
    docker-compose down
  displayName: Stop test network and machines

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
    failTaskOnFailedTests: true
